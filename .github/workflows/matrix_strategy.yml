name: Master Controller

on:
  workflow_dispatch:
    inputs:
      deploy-existing:
        type: boolean
        description: 'Deploy existing instead of building then deploying'
        required: true
        default: true
      image-name:
        type: string
        description: 'Image name'
        required: true
        default: 'hegash/mnist-convnet-image:latest'
      job-name:
        type: string
        description: 'Job name'
        required: true
        default: 'mnist-convnet-job'
      batch-size:
        type: string
        description: 'Batch size'
        required: true
        default: '64' # comma-separated list of values
      learning-rate:
        type: string
        description: 'Learning rate'
        required: true
        default: '0.001'
      num-epochs:
        type: string
        description: 'Number of epochs'
        required: true
        default: '2,4'

jobs:
  prejob:
    runs-on: ubuntu-latest
    outputs:
      batch_size: ${{ steps.set-batch-size.outputs.batch_size }}
      learning_rate: ${{ steps.set-learning-rate.outputs.learning_rate }}
      num_epochs: ${{ steps.set-num-epochs.outputs.num_epochs }}
      no_dot_lr: ${{ steps.set-no-dot-lr.outputs.no_dot_lr }}
    steps:
      - name: Python setup
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - id: set-batch-size
        run: |
          batch_size=$(python -c "print(str('${{ github.event.inputs.batch-size }}'.split(',')).replace(' ', ''))")
          echo "batch_size=$batch_size" >> $GITHUB_OUTPUT
      - id: set-learning-rate
        run: |
          learning_rate=$(python -c "print(str('${{ github.event.inputs.learning-rate }}'.split(',')).replace(' ', ''))")
          echo "learning_rate=$learning_rate" >> $GITHUB_OUTPUT
      - id: set-num-epochs
        run: |
          num_epochs=$(python -c "print(str('${{ github.event.inputs.num-epochs }}'.split(',')).replace(' ', ''))")
          echo "num_epochs=$num_epochs" >> $GITHUB_OUTPUT
      - id: set-no-dot-lr
        run: |
          var="${{ github.event.inputs.learning-rate }}"
          no_dot_lr=${var//./_}
          echo "no_dot_lr=$no_dot_lr" >> $GITHUB_OUTPUT

  call-deploy-existing:
    needs: prejob
    if: ${{ inputs.deploy-existing }}
    strategy:
      fail-fast: true
      matrix:
        batch_size: ${{ fromJson(needs.prejob.outputs.batch_size) }}
        learning_rate: ${{ fromJson(needs.prejob.outputs.learning_rate) }}
        num_epochs: ${{ fromJson(needs.prejob.outputs.num_epochs) }}
    uses: ./.github/workflows/reusable_deploy_existing.yml
    with:
      image-name: ${{ inputs.image-name }}
      job-name: ${{ inputs.job-name }}
      batch-size: ${{ matrix.batch_size }}
      learning-rate: ${{ matrix.learning_rate }}
      num-epochs: ${{ matrix.num_epochs }}
      no-dot-lr: ${{ needs.prejob.outputs.no_dot_lr }}
    secrets:
      google-auth: ${{ secrets.GOOGLE_CREDENTIALS }}
      WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}

  call-build-and-deploy:
    needs: prejob
    if: ${{ ! inputs.deploy-existing }}
    strategy:
      fail-fast: true
      matrix:
        batch_size: ${{ fromJson(needs.prejob.outputs.batch_size) }}
        learning_rate: ${{ fromJson(needs.prejob.outputs.learning_rate) }}
        num_epochs: ${{ fromJson(needs.prejob.outputs.num_epochs) }}
    uses: ./.github/workflows/reusable_build_and_deploy.yml
    with:
      image-name: ${{ inputs.image-name }}
      job-name: ${{ inputs.job-name }}
      batch-size: ${{ matrix.batch_size }}
      learning-rate: ${{ matrix.learning_rate }}
      num-epochs: ${{ matrix.num_epochs }}
      no-dot-lr: ${{ needs.prejob.outputs.no_dot_lr }}
    secrets:
      google-auth: ${{ secrets.GOOGLE_CREDENTIALS }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
