on:
  workflow_dispatch:
    inputs:
      batch-size:
        type: string
        description: 'Batch size'
        required: true
        default: '64' # comma-separated list of values
      learning-rate:
        type: string
        description: 'Learning rate'
        required: true
        default: '0.001'
      num-epochs:
        type: string
        description: 'Number of epochs'
        required: true
        default: '2,4'

jobs:
  prejob:
    # runs-on: arc-gke
    runs-on: ubuntu-latest
    outputs:
      batch_size: ${{ steps.set-batch-size.outputs.batch_size }}
      learning_rate: ${{ steps.set-learning-rate.outputs.learning_rate }}
      num_epochs: ${{ steps.set-num-epochs.outputs.num_epochs }}
    steps:
      - name: Python setup
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - id: set-batch-size
        run: |
          batch_size=$(python -c "print(str('${{ github.event.inputs.batch-size}}'.split(',')).replace(' ', ''))")
          echo "batch_size=$batch_size" >> $GITHUB_OUTPUT
      - id: set-learning-rate
        run: |
          learning_rate=$(python -c "print(str('${{ github.event.inputs.learning-rate}}'.split(',')).replace(' ', ''))")
          echo "learning_rate=$learning_rate" >> $GITHUB_OUTPUT
      - id: set-num-epochs
        run: |
          num_epochs=$(python -c "print(str('${{ github.event.inputs.num-epochs-size}}'.split(',')).replace(' ', ''))")
          echo "num_epochs=$num_epochs" >> $GITHUB_OUTPUT

  test:
    # runs-on: arc-gke
    runs-on: ubuntu-latest
    needs: prejob
    strategy:
      fail-fast: true
      matrix:
        batch_size: ${{ fromJson(needs.prejob.outputs.batch_size) }}
        learning_rate: ${{ fromJson(needs.prejob.outputs.learning_rate) }}
        num_epochs: ${{ fromJson(needs.prejob.outputs.num_epochs) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run tests
        run: |
          echo "Running tests with batch size ${{ matrix.batch_size }}, learning rate ${{ matrix.learning_rate }}, num epochs ${{ matrix.num_epochs }}"
